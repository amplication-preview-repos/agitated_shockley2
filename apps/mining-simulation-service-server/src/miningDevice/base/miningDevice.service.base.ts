/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MiningDevice as PrismaMiningDevice } from "@prisma/client";

export class MiningDeviceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MiningDeviceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.miningDevice.count(args);
  }

  async miningDevices(
    args: Prisma.MiningDeviceFindManyArgs
  ): Promise<PrismaMiningDevice[]> {
    return this.prisma.miningDevice.findMany(args);
  }
  async miningDevice(
    args: Prisma.MiningDeviceFindUniqueArgs
  ): Promise<PrismaMiningDevice | null> {
    return this.prisma.miningDevice.findUnique(args);
  }
  async createMiningDevice(
    args: Prisma.MiningDeviceCreateArgs
  ): Promise<PrismaMiningDevice> {
    return this.prisma.miningDevice.create(args);
  }
  async updateMiningDevice(
    args: Prisma.MiningDeviceUpdateArgs
  ): Promise<PrismaMiningDevice> {
    return this.prisma.miningDevice.update(args);
  }
  async deleteMiningDevice(
    args: Prisma.MiningDeviceDeleteArgs
  ): Promise<PrismaMiningDevice> {
    return this.prisma.miningDevice.delete(args);
  }
}
