/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MiningSession as PrismaMiningSession } from "@prisma/client";

export class MiningSessionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MiningSessionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.miningSession.count(args);
  }

  async miningSessions(
    args: Prisma.MiningSessionFindManyArgs
  ): Promise<PrismaMiningSession[]> {
    return this.prisma.miningSession.findMany(args);
  }
  async miningSession(
    args: Prisma.MiningSessionFindUniqueArgs
  ): Promise<PrismaMiningSession | null> {
    return this.prisma.miningSession.findUnique(args);
  }
  async createMiningSession(
    args: Prisma.MiningSessionCreateArgs
  ): Promise<PrismaMiningSession> {
    return this.prisma.miningSession.create(args);
  }
  async updateMiningSession(
    args: Prisma.MiningSessionUpdateArgs
  ): Promise<PrismaMiningSession> {
    return this.prisma.miningSession.update(args);
  }
  async deleteMiningSession(
    args: Prisma.MiningSessionDeleteArgs
  ): Promise<PrismaMiningSession> {
    return this.prisma.miningSession.delete(args);
  }
}
