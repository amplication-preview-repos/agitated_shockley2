/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Rewards as PrismaRewards } from "@prisma/client";

export class RewardsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RewardsCountArgs, "select">): Promise<number> {
    return this.prisma.rewards.count(args);
  }

  async rewardsItems(
    args: Prisma.RewardsFindManyArgs
  ): Promise<PrismaRewards[]> {
    return this.prisma.rewards.findMany(args);
  }
  async rewards(
    args: Prisma.RewardsFindUniqueArgs
  ): Promise<PrismaRewards | null> {
    return this.prisma.rewards.findUnique(args);
  }
  async createRewards(args: Prisma.RewardsCreateArgs): Promise<PrismaRewards> {
    return this.prisma.rewards.create(args);
  }
  async updateRewards(args: Prisma.RewardsUpdateArgs): Promise<PrismaRewards> {
    return this.prisma.rewards.update(args);
  }
  async deleteRewards(args: Prisma.RewardsDeleteArgs): Promise<PrismaRewards> {
    return this.prisma.rewards.delete(args);
  }
}
